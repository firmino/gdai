
services:
  
  pgvector:
    image: ankane/pgvector:latest
    hostname: pgvector
    restart: unless-stopped
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_DB=vectordb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpwd
    volumes:
      - ./infra/pgvector/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgvector_data:/var/lib/postgresql/data
    networks:
      - app_network

  supertokens:
    image: supertokens/supertokens-postgresql:latest
    restart: unless-stopped
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_USER: supertokens
      POSTGRESQL_PASSWORD: your_supertokens_password
      POSTGRESQL_DATABASE: supertokens
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
    depends_on:
      - postgres
    networks:
      - app_network

  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: supertokens
      POSTGRES_PASSWORD: your_supertokens_password
      POSTGRES_DB: supertokens
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  fastapi-app:
    container_name: fastapi-app
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8000"
    environment:
      WEAVIATE_URL: "http://weaviate:8080"
      SUPERTOKENS_URL: "http://supertokens:3567"
    depends_on:
      - pgvector
      - supertokens
    networks:
      - app_network
  

  nginx:
    profiles:
      - production
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/gdai.conf:/etc/nginx/conf.d/gdai.conf
      - ../ssl/fullchain.pem:/etc/letsencrypt/fullchain.pem
      - ../ssl/privkey.pem:/etc/letsencrypt/privkey.pem
    depends_on:
      - fastapi-app
    networks:
      - app_network
    
volumes:
  postgres_data:
  pgvector_data:

networks:
  app_network:
    driver: bridge