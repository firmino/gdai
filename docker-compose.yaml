
services:
  weaviate:
    image: semitechnologies/weaviate:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - app_network

  supertokens:
    image: supertokens/supertokens-postgresql:latest
    restart: unless-stopped
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_USER: supertokens
      POSTGRESQL_PASSWORD: your_supertokens_password
      POSTGRESQL_DATABASE: supertokens
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
    depends_on:
      - postgres
    networks:
      - app_network

  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: supertokens
      POSTGRES_PASSWORD: your_supertokens_password
      POSTGRES_DB: supertokens
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

 # Nginx (Proxy Reverso + SSL)
  nginx:
    profiles: ["production"] 
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../infra/nginx/sites/:/etc/nginx/conf.d/
      - ../infra/certbot/www/:/var/www/certbot/  # Desafio HTTP do Let's Encrypt
      - ../infra/certbot/conf/:/etc/letsencrypt/  # Certificados SSL
    depends_on:
      - certbot
      - fastapi-app
      
  # Certbot (Obter/Renovar Certificados)
  certbot:
    image: certbot/certbot
    volumes:
      - ./infra/certbot/www/:/var/www/certbot/
      - ./infra/certbot/conf/:/etc/letsencrypt/
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    # Renova certificados a cada 12h (Let's Encrypt só libera após 60 dias)


  fastapi-app:
    build:
      context: .  # assuming your FastAPI app is in the parent directory
      dockerfile: Dockerfile  # you'll need a Dockerfile for your FastAPI app
    ports:
      - "8000:8000"
    environment:
      WEAVIATE_URL: "http://weaviate:8080"
      SUPERTOKENS_URL: "http://supertokens:3567"
    depends_on:
      - weaviate
      - supertokens
    networks:
      - app_network







volumes:
  weaviate_data:
  postgres_data:

networks:
  app_network:
    driver: bridge